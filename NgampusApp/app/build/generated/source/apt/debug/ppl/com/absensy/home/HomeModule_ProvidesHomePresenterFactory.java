// Generated by Dagger (https://google.github.io/dagger).
package ppl.com.absensy.home;

import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;
import ppl.com.absensy.reminder.ClassReminder;
import ppl.com.absensy.repository.AppDatabase;
import ppl.com.absensy.repository.SharedPreferencesManager;

public final class HomeModule_ProvidesHomePresenterFactory
    implements Factory<HomeContract.Presenter> {
  private final HomeModule module;

  private final Provider<AppDatabase> appDatabaseProvider;

  private final Provider<SharedPreferencesManager> sharedPreferencesManagerProvider;

  private final Provider<ClassReminder> classReminderProvider;

  public HomeModule_ProvidesHomePresenterFactory(
      HomeModule module,
      Provider<AppDatabase> appDatabaseProvider,
      Provider<SharedPreferencesManager> sharedPreferencesManagerProvider,
      Provider<ClassReminder> classReminderProvider) {
    this.module = module;
    this.appDatabaseProvider = appDatabaseProvider;
    this.sharedPreferencesManagerProvider = sharedPreferencesManagerProvider;
    this.classReminderProvider = classReminderProvider;
  }

  @Override
  public HomeContract.Presenter get() {
    return provideInstance(
        module, appDatabaseProvider, sharedPreferencesManagerProvider, classReminderProvider);
  }

  public static HomeContract.Presenter provideInstance(
      HomeModule module,
      Provider<AppDatabase> appDatabaseProvider,
      Provider<SharedPreferencesManager> sharedPreferencesManagerProvider,
      Provider<ClassReminder> classReminderProvider) {
    return proxyProvidesHomePresenter(
        module,
        appDatabaseProvider.get(),
        sharedPreferencesManagerProvider.get(),
        classReminderProvider.get());
  }

  public static HomeModule_ProvidesHomePresenterFactory create(
      HomeModule module,
      Provider<AppDatabase> appDatabaseProvider,
      Provider<SharedPreferencesManager> sharedPreferencesManagerProvider,
      Provider<ClassReminder> classReminderProvider) {
    return new HomeModule_ProvidesHomePresenterFactory(
        module, appDatabaseProvider, sharedPreferencesManagerProvider, classReminderProvider);
  }

  public static HomeContract.Presenter proxyProvidesHomePresenter(
      HomeModule instance,
      AppDatabase appDatabase,
      SharedPreferencesManager sharedPreferencesManager,
      ClassReminder classReminder) {
    return Preconditions.checkNotNull(
        instance.providesHomePresenter(appDatabase, sharedPreferencesManager, classReminder),
        "Cannot return null from a non-@Nullable @Provides method");
  }
}
