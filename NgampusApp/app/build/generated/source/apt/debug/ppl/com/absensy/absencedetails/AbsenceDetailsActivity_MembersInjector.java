// Generated by Dagger (https://google.github.io/dagger).
package ppl.com.absensy.absencedetails;

import dagger.MembersInjector;
import javax.inject.Provider;
import ppl.com.absensy.absencedetails.recyclerviewabsencedetails.RecyclerViewAbsenceDetailsAdapter;

public final class AbsenceDetailsActivity_MembersInjector
    implements MembersInjector<AbsenceDetailsActivity> {
  private final Provider<AbsenceDetailsContract.Presenter> presenterProvider;

  private final Provider<RecyclerViewAbsenceDetailsAdapter>
      recyclerViewAbsenceDetailsAdapterProvider;

  public AbsenceDetailsActivity_MembersInjector(
      Provider<AbsenceDetailsContract.Presenter> presenterProvider,
      Provider<RecyclerViewAbsenceDetailsAdapter> recyclerViewAbsenceDetailsAdapterProvider) {
    this.presenterProvider = presenterProvider;
    this.recyclerViewAbsenceDetailsAdapterProvider = recyclerViewAbsenceDetailsAdapterProvider;
  }

  public static MembersInjector<AbsenceDetailsActivity> create(
      Provider<AbsenceDetailsContract.Presenter> presenterProvider,
      Provider<RecyclerViewAbsenceDetailsAdapter> recyclerViewAbsenceDetailsAdapterProvider) {
    return new AbsenceDetailsActivity_MembersInjector(
        presenterProvider, recyclerViewAbsenceDetailsAdapterProvider);
  }

  @Override
  public void injectMembers(AbsenceDetailsActivity instance) {
    injectPresenter(instance, presenterProvider.get());
    injectRecyclerViewAbsenceDetailsAdapter(
        instance, recyclerViewAbsenceDetailsAdapterProvider.get());
  }

  public static void injectPresenter(
      AbsenceDetailsActivity instance, AbsenceDetailsContract.Presenter presenter) {
    instance.presenter = presenter;
  }

  public static void injectRecyclerViewAbsenceDetailsAdapter(
      AbsenceDetailsActivity instance,
      RecyclerViewAbsenceDetailsAdapter recyclerViewAbsenceDetailsAdapter) {
    instance.recyclerViewAbsenceDetailsAdapter = recyclerViewAbsenceDetailsAdapter;
  }
}
