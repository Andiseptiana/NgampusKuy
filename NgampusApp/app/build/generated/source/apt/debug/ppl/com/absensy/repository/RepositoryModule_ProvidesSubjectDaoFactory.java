// Generated by Dagger (https://google.github.io/dagger).
package ppl.com.absensy.repository;

import android.app.Application;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

public final class RepositoryModule_ProvidesSubjectDaoFactory implements Factory<SubjectDao> {
  private final RepositoryModule module;

  private final Provider<Application> applicationProvider;

  public RepositoryModule_ProvidesSubjectDaoFactory(
      RepositoryModule module, Provider<Application> applicationProvider) {
    this.module = module;
    this.applicationProvider = applicationProvider;
  }

  @Override
  public SubjectDao get() {
    return provideInstance(module, applicationProvider);
  }

  public static SubjectDao provideInstance(
      RepositoryModule module, Provider<Application> applicationProvider) {
    return proxyProvidesSubjectDao(module, applicationProvider.get());
  }

  public static RepositoryModule_ProvidesSubjectDaoFactory create(
      RepositoryModule module, Provider<Application> applicationProvider) {
    return new RepositoryModule_ProvidesSubjectDaoFactory(module, applicationProvider);
  }

  public static SubjectDao proxyProvidesSubjectDao(
      RepositoryModule instance, Application application) {
    return Preconditions.checkNotNull(
        instance.providesSubjectDao(application),
        "Cannot return null from a non-@Nullable @Provides method");
  }
}
